<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <beans>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="true">
      <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
      <property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>
      <property name="username" value="root"/>
      <property name="password" value="root"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
      p:jobRepository-ref="jobRepository"/>


    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
      <property name="resource" value="classpath:support/test-data.csv"/>
      <property name="lineMapper">
        <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
          <property name="lineTokenizer">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
              <property name="names" value="firstName,lastName,song"/>
            </bean>
          </property>
          <property name="fieldSetMapper">
            <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
              <property name="targetType" value="vip.fairy.batch.model.Singer"/>
            </bean>
          </property>
        </bean>
      </property>
    </bean>

    <bean id="itemProcessor" class="vip.fairy.batch.SingerItemProcessor"/>

    <bean id="itemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
      <property name="itemSqlParameterSourceProvider">
        <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
      </property>
      <property name="sql" value="INSERT INTO singer (first_name, last_name, song) VALUES (:firstName, :lastName, :song)"/>
      <property name="dataSource" ref="dataSource"/>
    </bean>

    <jdbc:initialize-database>
      <jdbc:script location="classpath:org/springframework/batch/core/schema-drop-mysql.sql"/>
      <jdbc:script location="classpath:org/springframework/batch/core/schema-mysql.sql"/>
      <jdbc:script location="classpath:support/singer.sql"/>
    </jdbc:initialize-database>

    <bean id="stepExecutionStatsListener" class="vip.fairy.batch.StepExecutionStatsListener"/>

    <batch:job id="singerJob">
      <batch:step id="step1">
        <batch:tasklet>
          <batch:chunk reader="itemReader" processor="itemProcessor" writer="itemWriter"
            commit-interval="10"/>
          <batch:listeners>
            <batch:listener ref="stepExecutionStatsListener"/>
          </batch:listeners>
        </batch:tasklet>
        <batch:fail on="FAILED"/>
        <batch:end on="*"/>
      </batch:step>
    </batch:job>

    <batch:job-repository id="jobRepository"/>

  </beans>


</beans>
