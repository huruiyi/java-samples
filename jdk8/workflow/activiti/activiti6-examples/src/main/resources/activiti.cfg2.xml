<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!--数据源配置-->
  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
    <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/workflow?nullCatalogMeansCurrent=true&amp;createDatabaseIfNotExist=true"/>
    <property name="username" value="root"/>
    <property name="password" value="fairy-vip"/>
  </bean>

  <!--activiti流程引擎-->
  <bean id="processEngineConfiguration"
    class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
    <!-- 数据源 -->
    <property name="dataSource" ref="dataSource"/>
    <!-- 数据库更新策略 :没有表时，自动创建-->
    <property name="databaseSchemaUpdate" value="true"/>

    <!-- 开启异步作业执行器，如果不配置线程池就会使用它的默认线程池 -->
    <property name="asyncExecutorActivate" value="true"/>

    <!--开启事件日志记录机制-->
    <property name="enableDatabaseEventLogging" value="true"/>

    <!-- 如果使用我们自己定义的线程池，需要先定义一个执行器 -->
    <property name="asyncExecutor" ref="asyncExecutor"/>
  </bean>

  <!-- 执行器默认使用DefaultAsyncJobExecutor -->
  <bean id="asyncExecutor"
    class="org.activiti.engine.impl.asyncexecutor.DefaultAsyncJobExecutor">
    <!-- 自定义线程池ExecutorService -->
    <property name="executorService" ref="executorService"/>
  </bean>

  <bean id="executorService"
    class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
    <property name="threadNamePrefix" value="activiti-job-"/>
    <property name="corePoolSize" value="10"/>
    <property name="maxPoolSize" value="20"/>
    <property name="queueCapacity" value="100"/>
    <!-- 设置当线程池满了时候的拒绝策略,这里是使用的默认策略，抛出异常 -->
    <property name="rejectedExecutionHandler">
      <bean class="java.util.concurrent.ThreadPoolExecutor.AbortPolicy"/>
    </property>
  </bean>


</beans>
